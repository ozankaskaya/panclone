"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var generic_1 = __importDefault(require("./generic"));
var netlifySiteId = process.env.SITE_ID;
var netlifyBuildId = process.env.BUILD_ID;
var netlifyContext = process.env.CONTEXT;
var netlifyDeploymentUrl = process.env.DEPLOYMENT_URL;
var netlifyDeploymentId = process.env.DEPLOYMENT_ID;
var NetlifyConfig = /** @class */ (function (_super) {
    __extends(NetlifyConfig, _super);
    function NetlifyConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NetlifyConfig.prototype.wrapWebVitalsObject = function (metrics) {
        var _this = this;
        return metrics.map(function (m) { return ({
            webVital: m,
            _time: new Date().getTime(),
            netlify: {
                environment: _this.environment,
                source: 'web-vital',
                siteId: netlifySiteId,
                buildId: netlifyBuildId,
                context: netlifyContext,
                deploymentUrl: netlifyDeploymentUrl,
                deploymentId: netlifyDeploymentId,
            },
        }); });
    };
    NetlifyConfig.prototype.injectPlatformMetadata = function (logEvent, source) {
        logEvent.netlify = {
            environment: this.environment,
            region: source === 'edge' ? process.env.DENO_REGION : process.env.AWS_REGION,
            source: source + '-log',
            siteId: netlifySiteId,
            buildId: netlifyBuildId,
            context: netlifyContext,
            deploymentUrl: netlifyDeploymentUrl,
            deploymentId: source === 'edge' ? process.env.DENO_DEPLOYMENT_ID : netlifyDeploymentId,
        };
    };
    return NetlifyConfig;
}(generic_1.default));
exports.default = NetlifyConfig;
//# sourceMappingURL=netlify.js.map