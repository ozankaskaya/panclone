import { NextApiRequest } from "next";
import { LogEvent, RequestReport } from "../logger";
import { EndpointType } from "../shared";
import type Provider from "./base";
export default class GenericConfig implements Provider {
    proxyPath: string;
    isBrowser: boolean;
    shoudSendEdgeReport: boolean;
    token: string | undefined;
    dataset: string | undefined;
    environment: string;
    axiomUrl: string;
    region: string | undefined;
    isEnvVarsSet(): boolean;
    getIngestURL(_: EndpointType): string;
    getLogsEndpoint(): string;
    getWebVitalsEndpoint(): string;
    wrapWebVitalsObject(metrics: any[]): any;
    injectPlatformMetadata(logEvent: LogEvent, source: string): void;
    generateRequestMeta(req: NextApiRequest): RequestReport;
    getHeaderOrDefault(req: NextApiRequest, headerName: string, defaultValue: any): any;
}
