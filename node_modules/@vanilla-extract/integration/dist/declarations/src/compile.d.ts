import { Plugin, BuildOptions as EsbuildOptions } from 'esbuild';
import type { IdentifierOption } from './types';
interface VanillaExtractTransformPluginParams {
    identOption?: IdentifierOption;
}
export declare const vanillaExtractTransformPlugin: ({ identOption, }: VanillaExtractTransformPluginParams) => Plugin;
export interface CompileOptions {
    filePath: string;
    identOption: IdentifierOption;
    cwd?: string;
    esbuildOptions?: Pick<EsbuildOptions, 'plugins' | 'external' | 'define' | 'loader'>;
}
export declare function compile({ filePath, identOption, cwd, esbuildOptions, }: CompileOptions): Promise<{
    source: string;
    watchFiles: string[];
}>;
export {};
