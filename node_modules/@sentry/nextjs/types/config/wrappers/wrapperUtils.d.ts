/**
 * Call a data fetcher and trace it. Only traces the function if there is an active transaction on the scope.
 *
 * We only do the following until we move transaction creation into this function: When called, the wrapped function
 * will also update the name of the active transaction with a parameterized route provided via the `options` argument.
 */
export declare function callDataFetcherTraced<F extends (...args: any[]) => Promise<any> | any>(origFunction: F, origFunctionArgs: Parameters<F>, options: {
    parameterizedRoute: string;
    dataFetchingMethodName: string;
}): Promise<ReturnType<F>>;
//# sourceMappingURL=wrapperUtils.d.ts.map